import { LightningElement, api } from 'lwc';
import getSubmitOfferInfo from '@salesforce/apex/PBS_Leasing_AttachmentController.getSubmitOfferInfo';
import submitOffer from '@salesforce/apex/PBS_Leasing_AttachmentController.submitOffer';
import updateAutoGeneratedFormsDocuments from '@salesforce/apex/PBS_Leasing_AttachmentController.updateAutoGeneratedFormsDocuments';
export default class PBS_Leasing_SubmitOfferAttachments extends LightningElement {
    @api offerId;
    offerInfo = {};
    data = [];
    columns = [];
    errors = [];
    termsandconditons = 'No';
    ackLTRCompleted = 'No';
    ackRepresentOthers = 'No';
    connectedCallback() {
        getSubmitOfferInfo({ offerId: this.offerId })
        .then(result => {
            console.log(result);
            this.offerInfo = result;
            this.data = result.data;
            this.columns = result.columns;
            
        })
        .catch(error => {
            console.log(error);
        })
    }
    handleViewOffer() {
        if (this.offerId) {
            window.open('/leasing/s/Offer-M-PreviewOfferPage?offerId=' + this.offerId, 'View Offer Screen', 'width=900, height=700,scrollbars=yes,resizable=yes,location=no');
            return false;
        }
    }
    handleCancel() {
        const event = new CustomEvent('cancel', {
            detail: { message: 'cancel' }
            
        });
        this.dispatchEvent(event);
    }
    handleSubmit() {
         submitOffer({ offerId: this.offerId,  termsandconditons: this.termsandconditons,  ackLTRCompleted: this.ackLTRCompleted,  ackRepresentOthers: this.ackRepresentOthers })
        .then(result => {
            console.log('result>>>>>>>submitOffer',result);
            if(result.success === true){
                updateAutoGeneratedFormsDocuments({ ofrID: this.offerId })
                            .then(result => {
                                console.log('updateAutoGeneratedFormsDocuments');
                                this.isLoading = false;
                            })
                            .catch(error => {
                                this.isLoading = false;
                                console.log(error);
                            });
                window.location = '/leasing/s/OfferSubmitConfirmation';
            }else{
                window.scrollTo({ top: 0, behavior: 'smooth' });
                this.errors = result.errorMessages;
            }

        })
        .catch(error => {
            console.log(error);
        })
    }
    get options() {
        return [
            { label: 'Yes', value: 'Yes' },
            { label: 'No', value: 'No' },
        ];
    }
    handleChange(event){
        let name =  event.target.name;
        let currentValue = event.detail.value;
        console.log('name ', name);
        console.log('currentValue ', currentValue);
        if(name == 'termsandconditons'){
            this.termsandconditons = currentValue;
        }else if(name == 'ackLTRCompleted'){
            this.ackLTRCompleted = currentValue;
        }else if(name == 'ackRepresentOthers'){
            this.ackRepresentOthers = currentValue;
        }
    }
}