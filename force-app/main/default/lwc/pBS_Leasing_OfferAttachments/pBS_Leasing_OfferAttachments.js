import { LightningElement, track} from 'lwc';
import validateOffer from '@salesforce/apex/PBS_Leasing_AttachmentController.validateOffer';
import actionSavePage from '@salesforce/apex/PBS_Leasing_AttachmentController.actionSavePage';
import callGetCommunityURL from '@salesforce/apex/PBS_Leasing_AttachmentController.callGetCommunityURL';
import actionOfferDocuments from '@salesforce/apex/PBS_Leasing_AttachmentController.actionOfferDocuments';
import submitDocuments from '@salesforce/apex/PBS_Leasing_AttachmentController.submitDocuments';
import updateAutoGeneratedFormsDocuments from '@salesforce/apex/PBS_Leasing_AttachmentController.updateAutoGeneratedFormsDocuments';
import getPBS_AAAP_RLP_ObjRecords from "@salesforce/apex/PBS_Leasing_ProgressBarController.getPBS_AAAP_RLP_ObjRecords";
import getPBS_AAAP_Offer_ObjRecords from "@salesforce/apex/PBS_Leasing_ProgressBarController.getPBS_AAAP_Offer_ObjRecords";
import checkOfferIsValidOrNot from '@salesforce/apex/PBS_Leasing_AttachmentController.checkOfferIsValidOrNot';
import exitofferLabel from '@salesforce/label/c.exitofferLabel';
export default class PBS_Leasing_OfferAttachments extends LightningElement {
    pageName;
    errors = [];
    redirectURL;
    infoMessages = [];
    offerId;
    propertyId;
    PageURL;
    isReadyToSubmit = false;
    isLoading = false;
    isValidOffer = true;
    //edit = 'true';
    editMode;
    pbsAAAPRLPRecords;
    pbsAAApOfferRecords;
    @track exitoffer = exitofferLabel;
    connectedCallback() {
        this.pageName = window.location.pathname.substring(11);
        var encodeHref = encodeURIComponent(window.location.href);
        var currentURL = new URL(decodeURIComponent(encodeURIComponent(window.location.href)));
        if(currentURL.searchParams.get("edit") != null){
            let edit = currentURL.searchParams.get("edit");
            if(edit != undefined){
                this.editMode = (edit == 'true' ? true : false);
            }else{
                this.editMode = true;
            }
        }
        this.offerId = currentURL.searchParams.get("offerId")
        this.propertyId = currentURL.searchParams.get("propertyId")
        this.PageURL = decodeURIComponent(encodeURIComponent(window.location.origin));
        if((this.isAAAPOfferAttachmentPage == true || this.isRSAPAttachmentsPage == true) && this.editMode == true){
            this.isLoading = true;
            updateAutoGeneratedFormsDocuments({ ofrID: this.offerId })
            .then(result => {
                console.log('updateAutoGeneratedFormsDocuments');
                this.isLoading = false;
            })
            .catch(error => {
                this.isLoading = false;
                console.log(error);
            });
        }

        if(this.isAAAPOfferAttachmentPage == true){
            checkOfferIsValidOrNot({ offerId: this.offerId })
            .then(result => {
                console.log('checkOfferIsValidOrNot');
                this.isValidOffer = result;
            })
            .catch(error => {
                console.log(error);
            });
        }

        // offer records --- 
        getPBS_AAAP_Offer_ObjRecords({ offerId: this.offerId })
        .then(data => {
                this.pbsAAApOfferRecords = data.length > 0 ? data[0] : null;
                console.log('this.pbsAAApOfferRecords',this.pbsAAApOfferRecords);
            })
            .catch(error => {
                this.pbsAAApOfferRecords = null;
                console.error('Error retrieving PBS_AAAP_RLP__c records', error);
            });
        // end --- 

       if(this.isRSAPAdditionalAttachmentsPage == true){
            getPBS_AAAP_RLP_ObjRecords({ offerId: this.offerId })
            .then(data => {
                this.pbsAAAPRLPRecords = data.length > 0 ? data[0] : null;
            })
            .catch(error => {
                this.pbsAAAPRLPRecords = null;
                console.error('Error retrieving PBS_AAAP_RLP__c records', error);
            });
        }

    }
    get isEdit() {
        return this.edit === 'true';
    }
    get isDisabledDelete() {
        return !this.editMode;
    }
    get isAAAPOfferAttachmentPage() {
        return this.pageName.startsWith('Offer-M-Attachments');
    }
    get isAAAPOfferAdditionaAttachmentPage() {
        return this.pageName.startsWith('Offer-M-AdditionalAttachments');
    }
    get isRSAPAttachmentsPage() {
        return this.pageName.startsWith('Offer-S-Attachments');
    }
    get isRSAPAdditionalAttachmentsPage() {
        return this.pageName.startsWith('Offer-S-AdditionalAttachments');
    }

    handleReviewFinalOffer() {
        console.log('handleReviewFinalOffer');
        validateOffer({ offerId: this.offerId,propertyId: this.propertyId })
            .then(result => {
                window.scrollTo({ top: 0, behavior: 'smooth' });
                this.errors = result.errorMessages;
                this.infoMessages = result.infoMessages;
                this.isReadyToSubmit = result.success;
            })
            .catch(error => {
                console.log(error);
            })
    }
    handleCheckErrors() {
        console.log('handleCheckErrors');
        validateOffer({ offerId: this.offerId,propertyId: this.propertyId })
            .then(result => {
                window.scrollTo({ top: 0, behavior: 'smooth' });
                this.errors = result.errorMessages;
                this.infoMessages = result.infoMessages;
            })
            .catch(error => {
                console.log(error);
            })
    }

    handleExitOffer() {
        if (confirm(this.exitoffer)) {
            window.parent.location.href = 'Offer-Home';
        }
    }

    handleRSAPExitOffer() {
        if (confirm(this.exitoffer)) {
            window.parent.location.href = 'Offer-Home';
        }
    }

    handleBackToRatesAndSpaces() {
      /*  if (this.offerId && this.editMode === true) {
            window.location.href = '/leasing/s/Offer-M-SpaceRates?edit=true&offerId=' + this.offerId+'&propertyId='+this.propertyId;
        }
       else if (this.offerId) {
          window.location.href = '/leasing/s/Offer-M-SpaceRates?offerId=' + this.offerId+'&propertyId='+this.propertyId;
          //window.location.href = '/leasing/s/Offer-M-SpaceRates?edit='+this.editMode+'&offerId=' +this.offerId +'&propertyId='+this.propertyId;
        } else {
            console.error('OfferId is not provided');
        }*/
        if (this.offerId && this.editMode === undefined) {
            window.location.href = '/leasing/s/Offer-M-SpaceRates?offerId=' + this.offerId+'&propertyId='+this.propertyId;
        }
		else if (this.offerId) {
            window.location.href = '/leasing/s/Offer-M-SpaceRates?edit='+this.editMode+'&offerId=' +this.offerId +'&propertyId='+this.propertyId;
        } else {
            console.error('OfferId is not provided');
        }
    }

    handleRSAPBackToPropertyOwnerAndRemarks() {
        if (this.offerId) {
            window.location.href = '/leasing/s/Offer-S-Rent?edit='+this.editMode+'&offerId=' + this.offerId+'&propertyId='+this.propertyId;
        }
         else {
            console.error('OfferId is not provided');
        }
    }

    handleRSAPCertifyOffer() {

        validateOffer({ offerId: this.offerId,propertyId: this.propertyId })
            .then(result => {
                window.scrollTo({ top: 0, behavior: 'smooth' });
                this.errors = result.errorMessages;
                this.infoMessages = result.infoMessages;
                if(result.success){
                    window.location.href = '/leasing/s/Offer-S-AttachmentAck?edit='+this.editMode+'&offerId=' + this.offerId+'&propertyId='+this.propertyId;
                }
            })
            .catch(error => {
                console.log(error);
            });
    }

    handleActionSavePage() {
        actionSavePage({ offerId: this.offerId })
            .then(result => {
                console.log('result',result);    
                let modifiedPageUrl = this.PageURL;
                this.redirectURL =  '/leasing/s/'+ callGetCommunityURL({modifiedPageUrl : modifiedPageUrl});
                console.log('this.redirectURL',this.redirectURL);
                    if (this.pageName.includes('OfferAttachments')) {
                        this.redirectURL = '/leasing/s/Offer-M-Attachments?offerId=' + this.offerId+'&propertyId='+this.propertyId;
                        window.location.href = this.redirectURL;
                    } else {
                        this.redirectURL = '/leasing/s/Offer-M-AdditionalAttachments?offerId=' + this.offerId+'&propertyId='+this.propertyId;
                        window.location.href = this.redirectURL;
                    }  
            })
            .catch(error => {
                console.log(error);
            })
    }

    handleRSAPActionSavePage() {
        actionSavePage({ offerId: this.offerId })
            .then(result => {
                console.log('result',result);    
                let modifiedPageUrl = this.PageURL;
                this.redirectURL =  '/leasing/s/'+ callGetCommunityURL({modifiedPageUrl : modifiedPageUrl});
                console.log('this.redirectURL',this.redirectURL);
                    if (this.pageName.includes('Offer-S-Attachments')) {
                        this.redirectURL = '/leasing/s/Offer-S-Attachments?offerId=' + this.offerId+'&propertyId='+this.propertyId;
                        window.location.href = this.redirectURL;
                    } else {
                        this.redirectURL = '/leasing/s/Offer-S-AdditionalAttachments?offerId=' + this.offerId+'&propertyId='+this.propertyId;
                        window.location.href = this.redirectURL;
                    }  
            })
            .catch(error => {
                console.log(error);
            })
    }

    handleViewOffer() {
        if (this.offerId) {
            window.open('/leasing/s/Offer-M-PreviewOfferPage?recordId=' + this.offerId, 'View Offer Screen', 'width=900, height=700,scrollbars=yes,resizable=yes,location=no');
            return false;
        }
    }

    handleCancel() {
        this.isReadyToSubmit = false;
    }

    handleFileUpload() {
        console.log('handleFileUpload');
        console.log(this.template.querySelector('c-p-b-s_-leasing_-show_-attachments[data-id="Attachments_List"]'));
        this.template.querySelector('c-p-b-s_-leasing_-show_-attachments[data-id="Attachments_List"]').callGetColumnsAndRecords();
        console.log('handleFileUpload done');
    }

    handleNavigateToPage(ev) {
        console.log('handleNavigateToPage');
        console.log(ev);
        console.log(ev.detail.message);
        window.location.href = ev.detail.message.replace('fromLWC', '');
    }

    handleSubmitDocuments(){
        actionOfferDocuments({ offerId: this.offerId })
        .then(result => {
            console.log('resultactionOfferDocuments>>>>>>>>>>>>>>>',result);                 
            window.location.href = '/leasing/s/Offer-Home';   
        })
        .catch(error => {
            console.log(error);
        })

    }

    handleRSAPSubmitDocuments(){
        submitDocuments({ offerId: this.offerId })
        .then(result => {
            console.log('resultsubmitDocuments>>>>>>>>>>>>>>>',result);                 
            window.location.href = '/leasing/s/Offer-Home'; 
        })
        .catch(error => {
            console.log(error);
        })

    }
    get isTerminated(){
        return this.pbsAAApOfferRecords != undefined && (!this.pbsAAApOfferRecords.PBS_AAAP_RLP_Number__r.PBS_RSAP_Solicitation_Status__c);
    }
    get isSubmited(){
        return this.pbsAAApOfferRecords != undefined && this.pbsAAApOfferRecords.PBS_AAAP_Offer_Status__c === 'Closed';
    }
}